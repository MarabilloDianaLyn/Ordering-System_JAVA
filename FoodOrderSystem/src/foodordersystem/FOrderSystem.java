/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package foodordersystem;

import java.awt.event.KeyEvent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Acer-PC
 */
public class FOrderSystem extends javax.swing.JFrame {
    
    double price_Fries = 20.0;
    double price_Spag = 35.0;
    double price_Carb = 40.0;
    double price_HamB = 30.0;
    double price_Shaw = 45.0;
    double price_ChicSal = 40.0;
    double price_TunaSan = 45.0;
    double price_ChicSan = 40.0;
    double price_Pan = 20.0;
    double price_MangoP = 25.0;
    double price_Oreo = 35.0;
    double price_Blue = 45.0;
    double price_ChocoMuff = 45.0;
    double price_Water = 15.0;
    double price_Cola = 25.0;
    double price_Coffee = 25.0;
    double price_MilkT = 50.0;
    double price_Vanilla = 45.0;
    double price_Mango = 45.0;
    double price_StrawB = 45.0;
    double price_ChocMik = 45.0;
    
    double Tax_Rate = 1.50;
    
    double iTax, iTotal, iSubTotal, iChange, iCost;
    
    double[] itemcost = new double[21];

    /**
     * Creates new form FOrderSystem
     */
    public FOrderSystem() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jCheckBoxWater = new javax.swing.JCheckBox();
        jCheckBoxCola = new javax.swing.JCheckBox();
        jCheckBoxCofJel = new javax.swing.JCheckBox();
        jCheckBoxMilkTea = new javax.swing.JCheckBox();
        jCheckBoxVanilla = new javax.swing.JCheckBox();
        jCheckBoxMangoS = new javax.swing.JCheckBox();
        jCheckBoxStrawB = new javax.swing.JCheckBox();
        jCheckBoxChocMilk = new javax.swing.JCheckBox();
        jTextWater = new javax.swing.JTextField();
        jTextCola = new javax.swing.JTextField();
        jTextCoffee = new javax.swing.JTextField();
        jTextMilktea = new javax.swing.JTextField();
        jTextVanilla = new javax.swing.JTextField();
        jTextMangoS = new javax.swing.JTextField();
        jTextStrawB = new javax.swing.JTextField();
        jTextChocMik = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextCash = new javax.swing.JTextField();
        jButtonTotal = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jCheckBoxChocoM = new javax.swing.JCheckBox();
        jCheckBoxPan = new javax.swing.JCheckBox();
        jCheckBoxMPie = new javax.swing.JCheckBox();
        jCheckBoxOreo = new javax.swing.JCheckBox();
        jCheckBlue = new javax.swing.JCheckBox();
        jTextMango = new javax.swing.JTextField();
        jTextOreo = new javax.swing.JTextField();
        jTextPan = new javax.swing.JTextField();
        jTextBlue = new javax.swing.JTextField();
        jTextChoco = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jButtonReset = new javax.swing.JButton();
        jButtonExit = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextChange = new javax.swing.JTextField();
        jTextTax = new javax.swing.JTextField();
        jTextSub = new javax.swing.JTextField();
        jTextTotal = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jCheckBoxFries = new javax.swing.JCheckBox();
        jCheckBoxSpag = new javax.swing.JCheckBox();
        jCheckBoxCarb = new javax.swing.JCheckBox();
        jCheckBoxHam = new javax.swing.JCheckBox();
        jCheckBoxShaw = new javax.swing.JCheckBox();
        jCheckBoxChicSal = new javax.swing.JCheckBox();
        jCheckBoxTunaS = new javax.swing.JCheckBox();
        jCheckBoxChicSW = new javax.swing.JCheckBox();
        jTextFries = new javax.swing.JTextField();
        jTextSpag = new javax.swing.JTextField();
        jTextCarb = new javax.swing.JTextField();
        jTextHam = new javax.swing.JTextField();
        jTextShaw = new javax.swing.JTextField();
        jTextChiSal = new javax.swing.JTextField();
        jTextTuna = new javax.swing.JTextField();
        jTextChick = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(248, 187, 77));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(25, 25));
        setMaximumSize(new java.awt.Dimension(1300, 650));
        setMinimumSize(new java.awt.Dimension(1300, 650));
        setPreferredSize(new java.awt.Dimension(1300, 650));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(247, 216, 101));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 4));

        jCheckBoxWater.setBackground(new java.awt.Color(247, 216, 101));
        jCheckBoxWater.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCheckBoxWater.setText("Bottled Water");
        jCheckBoxWater.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxWaterActionPerformed(evt);
            }
        });

        jCheckBoxCola.setBackground(new java.awt.Color(247, 216, 101));
        jCheckBoxCola.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCheckBoxCola.setText("Cola");
        jCheckBoxCola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxColaActionPerformed(evt);
            }
        });

        jCheckBoxCofJel.setBackground(new java.awt.Color(247, 216, 101));
        jCheckBoxCofJel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCheckBoxCofJel.setText("Coffee Jelly");
        jCheckBoxCofJel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxCofJelActionPerformed(evt);
            }
        });

        jCheckBoxMilkTea.setBackground(new java.awt.Color(247, 216, 101));
        jCheckBoxMilkTea.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCheckBoxMilkTea.setText("Milk Tea");
        jCheckBoxMilkTea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMilkTeaActionPerformed(evt);
            }
        });

        jCheckBoxVanilla.setBackground(new java.awt.Color(247, 216, 101));
        jCheckBoxVanilla.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCheckBoxVanilla.setText("Vanilla");
        jCheckBoxVanilla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxVanillaActionPerformed(evt);
            }
        });

        jCheckBoxMangoS.setBackground(new java.awt.Color(247, 216, 101));
        jCheckBoxMangoS.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCheckBoxMangoS.setText("Mango");
        jCheckBoxMangoS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMangoSActionPerformed(evt);
            }
        });

        jCheckBoxStrawB.setBackground(new java.awt.Color(247, 216, 101));
        jCheckBoxStrawB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCheckBoxStrawB.setText("Strawberry");
        jCheckBoxStrawB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxStrawBActionPerformed(evt);
            }
        });

        jCheckBoxChocMilk.setBackground(new java.awt.Color(247, 216, 101));
        jCheckBoxChocMilk.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCheckBoxChocMilk.setText("Chocolate Milk");
        jCheckBoxChocMilk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxChocMilkActionPerformed(evt);
            }
        });

        jTextWater.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextWater.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextWater.setText("0");
        jTextWater.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextWater.setEnabled(false);
        jTextWater.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextWaterKeyTyped(evt);
            }
        });

        jTextCola.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextCola.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextCola.setText("0");
        jTextCola.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextCola.setEnabled(false);
        jTextCola.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextColaKeyTyped(evt);
            }
        });

        jTextCoffee.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextCoffee.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextCoffee.setText("0");
        jTextCoffee.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextCoffee.setEnabled(false);
        jTextCoffee.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextCoffeeKeyTyped(evt);
            }
        });

        jTextMilktea.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextMilktea.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextMilktea.setText("0");
        jTextMilktea.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextMilktea.setEnabled(false);
        jTextMilktea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextMilkteaKeyTyped(evt);
            }
        });

        jTextVanilla.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextVanilla.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextVanilla.setText("0");
        jTextVanilla.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextVanilla.setEnabled(false);
        jTextVanilla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextVanillaKeyTyped(evt);
            }
        });

        jTextMangoS.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextMangoS.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextMangoS.setText("0");
        jTextMangoS.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextMangoS.setEnabled(false);
        jTextMangoS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextMangoSKeyTyped(evt);
            }
        });

        jTextStrawB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextStrawB.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextStrawB.setText("0");
        jTextStrawB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextStrawB.setEnabled(false);
        jTextStrawB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextStrawBKeyTyped(evt);
            }
        });

        jTextChocMik.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextChocMik.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextChocMik.setText("0");
        jTextChocMik.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextChocMik.setEnabled(false);
        jTextChocMik.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextChocMikKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel4.setText("Drinks");

        jLabel5.setBackground(new java.awt.Color(247, 216, 101));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel5.setText("Shakes");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jCheckBoxWater)
                        .addGap(45, 45, 45)
                        .addComponent(jTextWater, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jCheckBoxCola)
                        .addGap(119, 119, 119)
                        .addComponent(jTextCola))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jCheckBoxMilkTea)
                        .addGap(87, 87, 87)
                        .addComponent(jTextMilktea))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jCheckBoxVanilla)
                        .addGap(101, 101, 101)
                        .addComponent(jTextVanilla))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jCheckBoxMangoS)
                        .addGap(99, 99, 99)
                        .addComponent(jTextMangoS))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jCheckBoxStrawB)
                        .addGap(69, 69, 69)
                        .addComponent(jTextStrawB))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jCheckBoxChocMilk)
                        .addGap(39, 39, 39)
                        .addComponent(jTextChocMik))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jCheckBoxCofJel)
                        .addGap(61, 61, 61)
                        .addComponent(jTextCoffee)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxWater)
                    .addComponent(jTextWater, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxCola)
                    .addComponent(jTextCola, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxCofJel)
                    .addComponent(jTextCoffee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxMilkTea)
                    .addComponent(jTextMilktea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxVanilla)
                    .addComponent(jTextVanilla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxMangoS)
                    .addComponent(jTextMangoS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxStrawB)
                    .addComponent(jTextStrawB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxChocMilk)
                    .addComponent(jTextChocMik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 100, 380, 500));

        jPanel2.setBackground(new java.awt.Color(247, 216, 101));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 4));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 40)); // NOI18N
        jLabel11.setText("Food Ordering System");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(393, 393, 393)
                .addComponent(jLabel11)
                .addContainerGap(402, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(23, 23, 23))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1250, 80));

        jPanel3.setBackground(new java.awt.Color(247, 216, 101));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 4));

        jComboBox1.setBackground(new java.awt.Color(247, 216, 101));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash", "Debit Card", "Visa Card" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTextCash.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextCash.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextCash.setText("\n");
        jTextCash.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButtonTotal.setBackground(new java.awt.Color(247, 216, 101));
        jButtonTotal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonTotal.setText("Total");
        jButtonTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTotalActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel6.setText("Payment Method");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jButtonTotal)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                            .addComponent(jTextCash)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextCash, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonTotal)
                .addContainerGap())
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 390, 190, 210));

        jPanel4.setBackground(new java.awt.Color(247, 216, 101));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 4));

        jCheckBoxChocoM.setBackground(new java.awt.Color(247, 216, 101));
        jCheckBoxChocoM.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCheckBoxChocoM.setText("Chocolate Muffin");
        jCheckBoxChocoM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxChocoMActionPerformed(evt);
            }
        });

        jCheckBoxPan.setBackground(new java.awt.Color(247, 216, 101));
        jCheckBoxPan.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCheckBoxPan.setText("Pancakes");
        jCheckBoxPan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxPanActionPerformed(evt);
            }
        });

        jCheckBoxMPie.setBackground(new java.awt.Color(247, 216, 101));
        jCheckBoxMPie.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCheckBoxMPie.setText("Mango Pie");
        jCheckBoxMPie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMPieActionPerformed(evt);
            }
        });

        jCheckBoxOreo.setBackground(new java.awt.Color(247, 216, 101));
        jCheckBoxOreo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCheckBoxOreo.setText("Oreo Cheescake");
        jCheckBoxOreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxOreoActionPerformed(evt);
            }
        });

        jCheckBlue.setBackground(new java.awt.Color(247, 216, 101));
        jCheckBlue.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCheckBlue.setText("Blueberry Tart");
        jCheckBlue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBlueActionPerformed(evt);
            }
        });

        jTextMango.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextMango.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextMango.setText("0");
        jTextMango.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextMango.setEnabled(false);
        jTextMango.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextMangoKeyTyped(evt);
            }
        });

        jTextOreo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextOreo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextOreo.setText("0");
        jTextOreo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextOreo.setEnabled(false);
        jTextOreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextOreoActionPerformed(evt);
            }
        });
        jTextOreo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextOreoKeyTyped(evt);
            }
        });

        jTextPan.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextPan.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextPan.setText("0");
        jTextPan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextPan.setEnabled(false);
        jTextPan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextPanKeyTyped(evt);
            }
        });

        jTextBlue.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextBlue.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextBlue.setText("0");
        jTextBlue.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextBlue.setEnabled(false);
        jTextBlue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextBlueKeyTyped(evt);
            }
        });

        jTextChoco.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextChoco.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextChoco.setText("0");
        jTextChoco.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextChoco.setEnabled(false);
        jTextChoco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextChocoKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel1.setText("Desserts");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jCheckBoxPan)
                        .addGap(170, 170, 170)
                        .addComponent(jTextPan, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jCheckBoxMPie)
                        .addGap(160, 160, 160)
                        .addComponent(jTextMango))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jCheckBoxOreo)
                        .addGap(116, 116, 116)
                        .addComponent(jTextOreo))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jCheckBlue)
                        .addGap(130, 130, 130)
                        .addComponent(jTextBlue))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jCheckBoxChocoM)
                        .addGap(108, 108, 108)
                        .addComponent(jTextChoco)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxPan)
                    .addComponent(jTextPan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxMPie)
                    .addComponent(jTextMango, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxOreo)
                    .addComponent(jTextOreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBlue)
                    .addComponent(jTextBlue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxChocoM)
                    .addComponent(jTextChoco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 100, 470, 280));

        jPanel6.setBackground(new java.awt.Color(247, 216, 101));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 4));

        jButtonReset.setBackground(new java.awt.Color(247, 216, 101));
        jButtonReset.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonReset.setText("Reset");
        jButtonReset.setRolloverEnabled(false);
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });

        jButtonExit.setBackground(new java.awt.Color(247, 216, 101));
        jButtonExit.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonExit.setText("Exit");
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Change");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Tax");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Subtotal");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Total");

        jTextChange.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextChange.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTextTax.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextTax.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTextSub.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextSub.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTextTotal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextTotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonReset)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(0, 4, Short.MAX_VALUE)
                        .addComponent(jButtonExit))
                    .addComponent(jTextTax, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextSub, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextTotal, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextChange))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextChange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextTax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextSub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonReset)
                    .addComponent(jButtonExit))
                .addContainerGap())
        );

        getContentPane().add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 390, 260, 210));

        jPanel7.setBackground(new java.awt.Color(247, 216, 101));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 4));

        jCheckBoxFries.setBackground(new java.awt.Color(247, 216, 101));
        jCheckBoxFries.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCheckBoxFries.setText("Fries");
        jCheckBoxFries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxFriesActionPerformed(evt);
            }
        });

        jCheckBoxSpag.setBackground(new java.awt.Color(247, 216, 101));
        jCheckBoxSpag.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCheckBoxSpag.setText("Spaghetti");
        jCheckBoxSpag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSpagActionPerformed(evt);
            }
        });

        jCheckBoxCarb.setBackground(new java.awt.Color(247, 216, 101));
        jCheckBoxCarb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCheckBoxCarb.setText("Carbonara");
        jCheckBoxCarb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxCarbActionPerformed(evt);
            }
        });

        jCheckBoxHam.setBackground(new java.awt.Color(247, 216, 101));
        jCheckBoxHam.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCheckBoxHam.setText("Hamburger");
        jCheckBoxHam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxHamActionPerformed(evt);
            }
        });

        jCheckBoxShaw.setBackground(new java.awt.Color(247, 216, 101));
        jCheckBoxShaw.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCheckBoxShaw.setText("Shawarma");
        jCheckBoxShaw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxShawActionPerformed(evt);
            }
        });

        jCheckBoxChicSal.setBackground(new java.awt.Color(247, 216, 101));
        jCheckBoxChicSal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCheckBoxChicSal.setText("Chicken Salad");
        jCheckBoxChicSal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxChicSalActionPerformed(evt);
            }
        });

        jCheckBoxTunaS.setBackground(new java.awt.Color(247, 216, 101));
        jCheckBoxTunaS.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCheckBoxTunaS.setText("Tuna Sandwich");
        jCheckBoxTunaS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxTunaSActionPerformed(evt);
            }
        });

        jCheckBoxChicSW.setBackground(new java.awt.Color(247, 216, 101));
        jCheckBoxChicSW.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCheckBoxChicSW.setText("Chicken Sandwich");
        jCheckBoxChicSW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxChicSWActionPerformed(evt);
            }
        });

        jTextFries.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFries.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFries.setText("0");
        jTextFries.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextFries.setEnabled(false);
        jTextFries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFriesActionPerformed(evt);
            }
        });
        jTextFries.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFriesKeyTyped(evt);
            }
        });

        jTextSpag.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextSpag.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextSpag.setText("0");
        jTextSpag.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextSpag.setEnabled(false);
        jTextSpag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextSpagActionPerformed(evt);
            }
        });
        jTextSpag.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextSpagKeyTyped(evt);
            }
        });

        jTextCarb.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextCarb.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextCarb.setText("0");
        jTextCarb.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextCarb.setEnabled(false);
        jTextCarb.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextCarbKeyTyped(evt);
            }
        });

        jTextHam.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextHam.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextHam.setText("0");
        jTextHam.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextHam.setEnabled(false);
        jTextHam.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextHamKeyTyped(evt);
            }
        });

        jTextShaw.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextShaw.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextShaw.setText("0");
        jTextShaw.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextShaw.setEnabled(false);
        jTextShaw.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextShawKeyTyped(evt);
            }
        });

        jTextChiSal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextChiSal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextChiSal.setText("0");
        jTextChiSal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextChiSal.setEnabled(false);
        jTextChiSal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextChiSalActionPerformed(evt);
            }
        });
        jTextChiSal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextChiSalKeyTyped(evt);
            }
        });

        jTextTuna.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextTuna.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextTuna.setText("0");
        jTextTuna.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextTuna.setEnabled(false);
        jTextTuna.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextTunaKeyTyped(evt);
            }
        });

        jTextChick.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextChick.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextChick.setText("0");
        jTextChick.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTextChick.setEnabled(false);
        jTextChick.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextChickKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel2.setText("Fast Meal");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel3.setText("Sandwich");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jCheckBoxFries)
                        .addGap(121, 121, 121)
                        .addComponent(jTextFries, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jCheckBoxSpag)
                        .addGap(83, 83, 83)
                        .addComponent(jTextSpag))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jCheckBoxCarb)
                        .addGap(77, 77, 77)
                        .addComponent(jTextCarb))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jCheckBoxHam)
                        .addGap(69, 69, 69)
                        .addComponent(jTextHam))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jCheckBoxShaw)
                        .addGap(75, 75, 75)
                        .addComponent(jTextShaw))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jCheckBoxChicSal)
                        .addGap(47, 47, 47)
                        .addComponent(jTextChiSal))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jCheckBoxTunaS)
                        .addGap(37, 37, 37)
                        .addComponent(jTextTuna))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jCheckBoxChicSW)
                        .addGap(15, 15, 15)
                        .addComponent(jTextChick))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(17, 17, 17)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxFries)
                    .addComponent(jTextFries, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxSpag)
                    .addComponent(jTextSpag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxCarb)
                    .addComponent(jTextCarb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxHam)
                    .addComponent(jTextHam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxShaw)
                    .addComponent(jTextShaw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxChicSal)
                    .addComponent(jTextChiSal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxTunaS)
                    .addComponent(jTextTuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxChicSW)
                    .addComponent(jTextChick, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );

        getContentPane().add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 380, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jCheckBoxCofJelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxCofJelActionPerformed
        if(jCheckBoxCofJel.isSelected()){
            jTextCoffee.setEnabled(true);
            jTextCoffee.requestFocus();
            jTextCoffee.setText("");
        }
        else{
            jTextCoffee.setEnabled(false);
            jTextCoffee.setText("0");
        }
    }//GEN-LAST:event_jCheckBoxCofJelActionPerformed

    private void jTextOreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextOreoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextOreoActionPerformed

    private JFrame frame;
    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
        frame = new JFrame("Exit");
        if(JOptionPane.showConfirmDialog(frame, "Confirm if you want to exit", "Food Ordering System", JOptionPane.YES_NO_OPTION)== JOptionPane.YES_NO_OPTION){
            System.exit(0);
        }
    }//GEN-LAST:event_jButtonExitActionPerformed

    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetActionPerformed
        //for the textfield
        jTextFries.setText("0");
        jTextHam.setText("0");
        jTextMango.setText("0");
        jTextMangoS.setText("0");
        jTextBlue.setText("0");
        jTextCarb.setText("0");
        jTextCash.setText("");
        jTextChange.setText("");
        jTextChiSal.setText("0");
        jTextChick.setText("0");
        jTextChocMik.setText("0");
        jTextChoco.setText("0");
        jTextCoffee.setText("0");
        jTextCola.setText("0");
        jTextMilktea.setText("0");
        jTextOreo.setText("0");
        jTextPan.setText("0");
        jTextShaw.setText("0");
        jTextSpag.setText("0");
        jTextStrawB.setText("0");
        jTextSub.setText("");
        jTextTax.setText("");
        jTextTotal.setText("");
        jTextTuna.setText("0");
        jTextVanilla.setText("0");
        jTextWater.setText("0");
        //=============================
        jTextFries.setEnabled(false);
        jTextHam.setEnabled(false);
        jTextMango.setEnabled(false);
        jTextMangoS.setEnabled(false);
        jTextBlue.setEnabled(false);
        jTextCarb.setEnabled(false);
        jTextChiSal.setEnabled(false);
        jTextChick.setEnabled(false);
        jTextChocMik.setEnabled(false);
        jTextChoco.setEnabled(false);
        jTextCoffee.setEnabled(false);
        jTextCola.setEnabled(false);
        jTextMilktea.setEnabled(false);
        jTextOreo.setEnabled(false);
        jTextPan.setEnabled(false);
        jTextShaw.setEnabled(false);
        jTextSpag.setEnabled(false);
        jTextStrawB.setEnabled(false);
        jTextTuna.setEnabled(false);
        jTextVanilla.setEnabled(false);
        jTextWater.setEnabled(false);
        //=============================
        jCheckBlue.setSelected(false);
        jCheckBoxCarb.setSelected(false);
        jCheckBoxChicSW.setSelected(false);
        jCheckBoxChicSal.setSelected(false);
        jCheckBoxChocMilk.setSelected(false);
        jCheckBoxChocoM.setSelected(false);
        jCheckBoxCofJel.setSelected(false);
        jCheckBoxCola.setSelected(false);
        jCheckBoxFries.setSelected(false);
        jCheckBoxHam.setSelected(false);
        jCheckBoxMPie.setSelected(false);
        jCheckBoxMangoS.setSelected(false);
        jCheckBoxMilkTea.setSelected(false);
        jCheckBoxOreo.setSelected(false);
        jCheckBoxPan.setSelected(false);
        jCheckBoxShaw.setSelected(false);
        jCheckBoxSpag.setSelected(false);
        jCheckBoxStrawB.setSelected(false);
        jCheckBoxTunaS.setSelected(false);
        jCheckBoxVanilla.setSelected(false);
        jCheckBoxWater.setSelected(false);
    }//GEN-LAST:event_jButtonResetActionPerformed

    private void jTextFriesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFriesKeyTyped
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))
        || (iNumber == KeyEvent.VK_BACK_SPACE)
        || (iNumber == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_jTextFriesKeyTyped

    private void jTextSpagKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextSpagKeyTyped
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))
        || (iNumber == KeyEvent.VK_BACK_SPACE)
        || (iNumber == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_jTextSpagKeyTyped

    private void jTextCarbKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextCarbKeyTyped
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))
        || (iNumber == KeyEvent.VK_BACK_SPACE)
        || (iNumber == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_jTextCarbKeyTyped

    private void jTextHamKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextHamKeyTyped
        char iNumber = evt.getKeyChar();
        if (!(Character.isDigit(iNumber))
        || (iNumber == KeyEvent.VK_BACK_SPACE)
        || (iNumber == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_jTextHamKeyTyped

    private void jTextShawKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextShawKeyTyped
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))
        || (iNumber == KeyEvent.VK_BACK_SPACE)
        || (iNumber == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_jTextShawKeyTyped

    private void jTextChiSalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextChiSalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextChiSalActionPerformed

    private void jTextChiSalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextChiSalKeyTyped
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))
        || (iNumber == KeyEvent.VK_BACK_SPACE)
        || (iNumber == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_jTextChiSalKeyTyped

    private void jTextTunaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextTunaKeyTyped
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))
        || (iNumber == KeyEvent.VK_BACK_SPACE)
        || (iNumber == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_jTextTunaKeyTyped

    private void jTextChickKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextChickKeyTyped
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))
        || (iNumber == KeyEvent.VK_BACK_SPACE)
        || (iNumber == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_jTextChickKeyTyped

    private void jTextPanKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextPanKeyTyped
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))
        || (iNumber == KeyEvent.VK_BACK_SPACE)
        || (iNumber == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_jTextPanKeyTyped

    private void jTextMangoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextMangoKeyTyped
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))
        || (iNumber == KeyEvent.VK_BACK_SPACE)
        || (iNumber == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_jTextMangoKeyTyped

    private void jTextOreoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextOreoKeyTyped
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))
        || (iNumber == KeyEvent.VK_BACK_SPACE)
        || (iNumber == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_jTextOreoKeyTyped

    private void jTextBlueKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextBlueKeyTyped
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))
        || (iNumber == KeyEvent.VK_BACK_SPACE)
        || (iNumber == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_jTextBlueKeyTyped

    private void jTextChocoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextChocoKeyTyped
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))
        || (iNumber == KeyEvent.VK_BACK_SPACE)
        || (iNumber == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_jTextChocoKeyTyped

    private void jTextWaterKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextWaterKeyTyped
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))
        || (iNumber == KeyEvent.VK_BACK_SPACE)
        || (iNumber == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_jTextWaterKeyTyped

    private void jTextColaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextColaKeyTyped
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))
        || (iNumber == KeyEvent.VK_BACK_SPACE)
        || (iNumber == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_jTextColaKeyTyped

    private void jTextCoffeeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextCoffeeKeyTyped
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))
        || (iNumber == KeyEvent.VK_BACK_SPACE)
        || (iNumber == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_jTextCoffeeKeyTyped

    private void jTextMilkteaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextMilkteaKeyTyped
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))
        || (iNumber == KeyEvent.VK_BACK_SPACE)
        || (iNumber == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_jTextMilkteaKeyTyped

    private void jTextVanillaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextVanillaKeyTyped
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))
        || (iNumber == KeyEvent.VK_BACK_SPACE)
        || (iNumber == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_jTextVanillaKeyTyped

    private void jTextMangoSKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextMangoSKeyTyped
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))
        || (iNumber == KeyEvent.VK_BACK_SPACE)
        || (iNumber == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_jTextMangoSKeyTyped

    private void jTextStrawBKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextStrawBKeyTyped
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))
        || (iNumber == KeyEvent.VK_BACK_SPACE)
        || (iNumber == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_jTextStrawBKeyTyped

    private void jTextChocMikKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextChocMikKeyTyped
        char iNumber = evt.getKeyChar();
        if(!(Character.isDigit(iNumber))
        || (iNumber == KeyEvent.VK_BACK_SPACE)
        || (iNumber == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_jTextChocMikKeyTyped

    private void jCheckBoxFriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxFriesActionPerformed
        if(jCheckBoxFries.isSelected()){
            jTextFries.setEnabled(true);
            jTextFries.requestFocus();
            jTextFries.setText("");
        }
        else{
            jTextFries.setEnabled(false);
            jTextFries.setText("0");
        }
    }//GEN-LAST:event_jCheckBoxFriesActionPerformed

    private void jCheckBoxSpagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSpagActionPerformed
        if(jCheckBoxSpag.isSelected()){
            jTextSpag.setEnabled(true);
            jTextSpag.requestFocus();
            jTextSpag.setText("");
        }
        else{
            jTextSpag.setEnabled(false);
            jTextSpag.setText("0");
        }
    }//GEN-LAST:event_jCheckBoxSpagActionPerformed

    private void jCheckBoxCarbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxCarbActionPerformed
        if(jCheckBoxCarb.isSelected()){
            jTextCarb.setEnabled(true);
            jTextCarb.requestFocus();
            jTextCarb.setText("");
        }
        else{
            jTextCarb.setEnabled(false);
            jTextCarb.setText("0");
        }
    }//GEN-LAST:event_jCheckBoxCarbActionPerformed

    private void jCheckBoxHamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxHamActionPerformed
        if(jCheckBoxHam.isSelected()){
            jTextHam.setEnabled(true);
            jTextHam.requestFocus();
            jTextHam.setText("");
        }
        else{
            jTextHam.setEnabled(false);
            jTextHam.setText("0");
        }
    }//GEN-LAST:event_jCheckBoxHamActionPerformed

    private void jCheckBoxShawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxShawActionPerformed
        if(jCheckBoxShaw.isSelected()){
            jTextShaw.setEnabled(true);
            jTextShaw.requestFocus();
            jTextShaw.setText("");
        }
        else{
            jTextShaw.setEnabled(false);
            jTextShaw.setText("0");
        }
    }//GEN-LAST:event_jCheckBoxShawActionPerformed

    private void jCheckBoxChicSalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxChicSalActionPerformed
        if(jCheckBoxChicSal.isSelected()){
            jTextChiSal.setEnabled(true);
            jTextChiSal.requestFocus();
            jTextChiSal.setText("");
        }
        else{
            jTextChiSal.setEnabled(false);
            jTextChiSal.setText("0");
        }
    }//GEN-LAST:event_jCheckBoxChicSalActionPerformed

    private void jCheckBoxTunaSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxTunaSActionPerformed
        if(jCheckBoxTunaS.isSelected()){
            jTextTuna.setEnabled(true);
            jTextTuna.requestFocus();
            jTextTuna.setText("");
        }
        else{
            jTextTuna.setEnabled(false);
            jTextTuna.setText("0");
        }
    }//GEN-LAST:event_jCheckBoxTunaSActionPerformed

    private void jCheckBoxChicSWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxChicSWActionPerformed
        if(jCheckBoxChicSW.isSelected()){
            jTextChick.setEnabled(true);
            jTextChick.requestFocus();
            jTextChick.setText("");
        }
        else{
            jTextChick.setEnabled(false);
            jTextChick.setText("0");
        }
    }//GEN-LAST:event_jCheckBoxChicSWActionPerformed

    private void jCheckBoxPanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxPanActionPerformed
        if(jCheckBoxPan.isSelected()){
            jTextPan.setEnabled(true);
            jTextPan.requestFocus();
            jTextPan.setText("");
        }
        else{
            jTextPan.setEnabled(false);
            jTextPan.setText("0");
        }
    }//GEN-LAST:event_jCheckBoxPanActionPerformed

    private void jCheckBoxMPieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMPieActionPerformed
        if(jCheckBoxMPie.isSelected()){
            jTextMango.setEnabled(true);
            jTextMango.requestFocus();
            jTextMango.setText("");
        }
        else{
            jTextMango.setEnabled(false);
            jTextMango.setText("0");
        }
    }//GEN-LAST:event_jCheckBoxMPieActionPerformed

    private void jCheckBoxOreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxOreoActionPerformed
        if(jCheckBoxOreo.isSelected()){
            jTextOreo.setEnabled(true);
            jTextOreo.requestFocus();
            jTextOreo.setText("");
        }
        else{
            jTextOreo.setEnabled(false);
            jTextOreo.setText("");
        }
    }//GEN-LAST:event_jCheckBoxOreoActionPerformed

    private void jCheckBlueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBlueActionPerformed
        if(jCheckBlue.isSelected()){
            jTextBlue.setEnabled(true);
            jTextBlue.requestFocus();
            jTextBlue.setText("");
        }
        else{
            jTextBlue.setEnabled(false);
            jTextBlue.setText("0");
        }
    }//GEN-LAST:event_jCheckBlueActionPerformed

    private void jCheckBoxChocoMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxChocoMActionPerformed
        if(jCheckBoxChocoM.isSelected()){
            jTextChoco.setEnabled(true);
            jTextChoco.requestFocus();
            jTextChoco.setText("");
        }
        else{
            jTextChoco.setEnabled(false);
            jTextChoco.setText("0");
        }
    }//GEN-LAST:event_jCheckBoxChocoMActionPerformed

    private void jCheckBoxWaterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxWaterActionPerformed
        if(jCheckBoxWater.isSelected()){
            jTextWater.setEnabled(true);
            jTextWater.requestFocus();
            jTextWater.setText("");
        }
        else{
            jTextWater.setEnabled(false);
            jTextWater.setText("0");
        }
    }//GEN-LAST:event_jCheckBoxWaterActionPerformed

    private void jCheckBoxColaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxColaActionPerformed
        if(jCheckBoxCola.isSelected()){
            jTextCola.setEnabled(true);
            jTextCola.requestFocus();
            jTextCola.setText("");
        }
        else{
            jTextCola.setEnabled(false);
            jTextCola.setText("0");
        }
    }//GEN-LAST:event_jCheckBoxColaActionPerformed

    private void jCheckBoxMilkTeaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMilkTeaActionPerformed
        if(jCheckBoxMilkTea.isSelected()){
            jTextMilktea.setEnabled(true);
            jTextMilktea.requestFocus();
            jTextMilktea.setText("");
        }
        else{
            jTextMilktea.setEnabled(false);
            jTextMilktea.setText("0");
        }
    }//GEN-LAST:event_jCheckBoxMilkTeaActionPerformed

    private void jCheckBoxVanillaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxVanillaActionPerformed
        if(jCheckBoxVanilla.isSelected()){
            jTextVanilla.setEnabled(true);
            jTextVanilla.requestFocus();
            jTextVanilla.setText("");
        }
        else{
            jTextVanilla.setEnabled(false);
            jTextVanilla.setText("0");
        }
    }//GEN-LAST:event_jCheckBoxVanillaActionPerformed

    private void jCheckBoxMangoSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMangoSActionPerformed
        if(jCheckBoxMangoS.isSelected()){
            jTextMangoS.setEnabled(true);
            jTextMangoS.requestFocus();
            jTextMangoS.setText("");
        }
        else{
            jTextMangoS.setEnabled(false);
            jTextMangoS.setText("0");
        }
    }//GEN-LAST:event_jCheckBoxMangoSActionPerformed

    private void jCheckBoxStrawBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxStrawBActionPerformed
        if(jCheckBoxStrawB.isSelected()){
            jTextStrawB.setEnabled(true);
            jTextStrawB.requestFocus();
            jTextStrawB.setText("");
        }
        else{
            jTextStrawB.setEnabled(false);
            jTextStrawB.setText("0");
        }
    }//GEN-LAST:event_jCheckBoxStrawBActionPerformed

    private void jCheckBoxChocMilkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxChocMilkActionPerformed
        if(jCheckBoxChocMilk.isSelected()){
            jTextChocMik.setEnabled(true);
            jTextChocMik.requestFocus();
            jTextChocMik.setText("");
        }
        else{
            jTextChocMik.setEnabled(false);
            jTextChocMik.setText("0");
        }
    }//GEN-LAST:event_jCheckBoxChocMilkActionPerformed

    private void jTextFriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFriesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFriesActionPerformed

    private void jTextSpagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextSpagActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextSpagActionPerformed

    private void jButtonTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTotalActionPerformed
        itemcost[0] = Double.parseDouble(jTextFries.getText())*price_Fries;
        itemcost[1] = Double.parseDouble(jTextSpag.getText())*price_Spag;
        itemcost[2] = Double.parseDouble(jTextCarb.getText())*price_Carb;
        itemcost[3] = Double.parseDouble(jTextHam.getText())*price_HamB;
        itemcost[4] = Double.parseDouble(jTextShaw.getText())*price_Shaw;
        itemcost[5] = Double.parseDouble(jTextChiSal.getText())*price_ChicSal;
        itemcost[6] = Double.parseDouble(jTextTuna.getText())*price_TunaSan;
        itemcost[7] = Double.parseDouble(jTextChick.getText())*price_ChicSan;
        itemcost[8] = Double.parseDouble(jTextPan.getText())*price_Pan;
        itemcost[9] = Double.parseDouble(jTextMango.getText())*price_MangoP;
        itemcost[10] = Double.parseDouble(jTextOreo.getText())*price_Oreo;
        itemcost[11] = Double.parseDouble(jTextBlue.getText())*price_Blue;
        itemcost[12] = Double.parseDouble(jTextChoco.getText())*price_ChocoMuff;
        itemcost[13] = Double.parseDouble(jTextWater.getText())*price_Water;
        itemcost[14] = Double.parseDouble(jTextCola.getText())*price_Cola;
        itemcost[15] = Double.parseDouble(jTextCoffee.getText())*price_Coffee;
        itemcost[16] = Double.parseDouble(jTextMilktea.getText())*price_MilkT;
        itemcost[17] = Double.parseDouble(jTextVanilla.getText())*price_Vanilla;
        itemcost[18] = Double.parseDouble(jTextMangoS.getText())*price_Mango;
        itemcost[19] = Double.parseDouble(jTextStrawB.getText())*price_StrawB;
        itemcost[20] = Double.parseDouble(jTextChocMik.getText())*price_ChocMik;
        
        
        
        String PaymentMethod = (String)jComboBox1.getSelectedItem();
        if (PaymentMethod == "Cash"){
            iSubTotal = itemcost[0] + itemcost[1] + itemcost[2] + itemcost[3] + itemcost[4] + itemcost[5] 
                + itemcost[6] + itemcost[7] + itemcost[8] + itemcost[9] + itemcost[10] + itemcost[11] 
                + itemcost[12] + itemcost[13] + itemcost[14] + itemcost[15] + itemcost[16] + itemcost[17]
                + itemcost[18] + itemcost[19] + itemcost[20]; 
        
            iChange = Double.parseDouble(jTextCash.getText());
            
            if (iChange >= iSubTotal){
            
            iTax = (iSubTotal * Tax_Rate)/100;
        
            String cTax = String.format("₱%.2f", iTax);
            jTextTax.setText(cTax);
        
            String cSubTotal = String.format("₱%.2f", iSubTotal);
            jTextSub.setText(cSubTotal);
        
            String cTotal = String.format("₱%.2f", iSubTotal + iTax);
            jTextTotal.setText(cTotal);
            
            String cChange = String.format("₱%.2f",iChange - (iSubTotal + iTax));
            jTextChange.setText(cChange);
            }
            
            else{
            JOptionPane.showMessageDialog(null, "Not enough cash", "Food Ordering System", JOptionPane.OK_OPTION);
            }
        }
        else if (PaymentMethod == "Debit Card" || PaymentMethod == "Visa Card"){
            iSubTotal = itemcost[0] + itemcost[1] + itemcost[2] + itemcost[3] + itemcost[4] + itemcost[5] 
                + itemcost[6] + itemcost[7] + itemcost[8] + itemcost[9] + itemcost[10] + itemcost[11] 
                + itemcost[12] + itemcost[13] + itemcost[14] + itemcost[15] + itemcost[16] + itemcost[17]
                + itemcost[18] + itemcost[19] + itemcost[20]; 
        
            iTax = (iSubTotal * Tax_Rate)/100;
        
            String cTax = String.format("₱%.2f", iTax);
            jTextTax.setText(cTax);
        
            String cSubTotal = String.format("₱%.2f", iSubTotal);
            jTextSub.setText(cSubTotal);
        
            String cTotal = String.format("₱%.2f", iSubTotal + iTax);
            jTextTotal.setText(cTotal);
        }
        
        
        
    }//GEN-LAST:event_jButtonTotalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FOrderSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FOrderSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FOrderSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FOrderSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FOrderSystem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JButton jButtonTotal;
    private javax.swing.JCheckBox jCheckBlue;
    private javax.swing.JCheckBox jCheckBoxCarb;
    private javax.swing.JCheckBox jCheckBoxChicSW;
    private javax.swing.JCheckBox jCheckBoxChicSal;
    private javax.swing.JCheckBox jCheckBoxChocMilk;
    private javax.swing.JCheckBox jCheckBoxChocoM;
    private javax.swing.JCheckBox jCheckBoxCofJel;
    private javax.swing.JCheckBox jCheckBoxCola;
    private javax.swing.JCheckBox jCheckBoxFries;
    private javax.swing.JCheckBox jCheckBoxHam;
    private javax.swing.JCheckBox jCheckBoxMPie;
    private javax.swing.JCheckBox jCheckBoxMangoS;
    private javax.swing.JCheckBox jCheckBoxMilkTea;
    private javax.swing.JCheckBox jCheckBoxOreo;
    private javax.swing.JCheckBox jCheckBoxPan;
    private javax.swing.JCheckBox jCheckBoxShaw;
    private javax.swing.JCheckBox jCheckBoxSpag;
    private javax.swing.JCheckBox jCheckBoxStrawB;
    private javax.swing.JCheckBox jCheckBoxTunaS;
    private javax.swing.JCheckBox jCheckBoxVanilla;
    private javax.swing.JCheckBox jCheckBoxWater;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JTextField jTextBlue;
    private javax.swing.JTextField jTextCarb;
    private javax.swing.JTextField jTextCash;
    private javax.swing.JTextField jTextChange;
    private javax.swing.JTextField jTextChiSal;
    private javax.swing.JTextField jTextChick;
    private javax.swing.JTextField jTextChocMik;
    private javax.swing.JTextField jTextChoco;
    private javax.swing.JTextField jTextCoffee;
    private javax.swing.JTextField jTextCola;
    private javax.swing.JTextField jTextFries;
    private javax.swing.JTextField jTextHam;
    private javax.swing.JTextField jTextMango;
    private javax.swing.JTextField jTextMangoS;
    private javax.swing.JTextField jTextMilktea;
    private javax.swing.JTextField jTextOreo;
    private javax.swing.JTextField jTextPan;
    private javax.swing.JTextField jTextShaw;
    private javax.swing.JTextField jTextSpag;
    private javax.swing.JTextField jTextStrawB;
    private javax.swing.JTextField jTextSub;
    private javax.swing.JTextField jTextTax;
    private javax.swing.JTextField jTextTotal;
    private javax.swing.JTextField jTextTuna;
    private javax.swing.JTextField jTextVanilla;
    private javax.swing.JTextField jTextWater;
    // End of variables declaration//GEN-END:variables
}
